

casa@DESKTOP-H37H4UJ MINGW64 ~
$ git init Taller-Git
Initialized empty Git repository in C:/Users/casa/Taller-Git/.git/

casa@DESKTOP-H37H4UJ MINGW64 ~
$ git config --global user.name "J4sU25"

casa@DESKTOP-H37H4UJ MINGW64 ~
$ git config --global user.email "juan.andres.salazar@correounivalle.edu.co"

casa@DESKTOP-H37H4UJ MINGW64 ~
$ git config --global user.name "Juan Andres Salazar"

casa@DESKTOP-H37H4UJ MINGW64 ~
$ git checkout -b feature
fatal: not a git repository (or any of the parent directories): .git

casa@DESKTOP-H37H4UJ MINGW64 ~
$ git branch <feature>
bash: syntax error near unexpected token `newline'

casa@DESKTOP-H37H4UJ MINGW64 ~
$ git branch feature
fatal: not a git repository (or any of the parent directories): .git

casa@DESKTOP-H37H4UJ MINGW64 ~
$ ^C

casa@DESKTOP-H37H4UJ MINGW64 ~
$ cd ^[[200~C:/Users/casa/Taller-Git/.git/
bash: cd: $'\E[200~C:/Users/casa/Taller-Git/.git/': No such file or directory

casa@DESKTOP-H37H4UJ MINGW64 ~
$ cd Taller-Git

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (master)
$ git branch feature
fatal: not a valid object name: 'master'

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (master)
$ git checkout -b feature
Switched to a new branch 'feature'

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (feature)
$ ^C

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (feature)
$ git branch <fa
bash: fa: No such file or directory
e
casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (feature)
$ git branch <feature>
bash: syntax error near unexpected token `newline'

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (feature)
$ git branchfeature
git: 'branchfeature' is not a git command. See 'git --help'.

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (feature)
$ git --help
usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--no-lazy-fetch]
           [--no-optional-locks] [--no-advice] [--bare] [--git-dir=<path>]
           [--work-tree=<path>] [--namespace=<name>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (feature)
$ git branch "feature"
fatal: not a valid object name: 'feature'

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (feature)
$ echo "Taller-Git presentacion" > archivo.txt

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (feature)
$ git add archivo.txt
warning: in the working copy of 'archivo.txt', LF will be replaced by CRLF the next time Git touches it

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (feature)
$ git commit -m "Commit inicial"
[feature (root-commit) becbaa3] Commit inicial
 1 file changed, 1 insertion(+)
 create mode 100644 archivo.txt

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (feature)
$ echo "Texto agregado en feature" >> archivo.txt

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (feature)
$ git commit -am "Segundo commit en feature"
warning: in the working copy of 'archivo.txt', LF will be replaced by CRLF the next time Git touches it
[feature dd95eff] Segundo commit en feature
 1 file changed, 1 insertion(+)

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (feature)
$ git checkout master
error: pathspec 'master' did not match any file(s) known to git

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (feature)
$ cd master
bash: cd: master: No such file or directory

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (feature)
$ git checkout master
error: pathspec 'master' did not match any file(s) known to git

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (feature)
$ echo "Texto adicional taller git" >>> archivo.txt
bash: syntax error near unexpected token `>'

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (feature)
$ echo "Texto adicional taller git" >> archivo.txt

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (feature)
$ git commit -am "Tercer commit en feature"
warning: in the working copy of 'archivo.txt', LF will be replaced by CRLF the next time Git touches it
[feature 59ac689] Tercer commit en feature
 1 file changed, 1 insertion(+)

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (feature)
$ echo "Ultimo texto en feature" >> archivo.txt

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (feature)
$ git checkout master
error: pathspec 'master' did not match any file(s) known to git

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (feature)
$ git checkout  - b master
error: pathspec '-' did not match any file(s) known to git
error: pathspec 'b' did not match any file(s) known to git
error: pathspec 'master' did not match any file(s) known to git

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (feature)
$ git checkout  -b master
Switched to a new branch 'master'

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (master)
$ it merge
bash: it: command not found

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (master)
$ git merge feature
Already up to date.

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (master)
$ git reset --hard HEAD~1
HEAD is now at dd95eff Segundo commit en feature

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (master)
$ git rebase feature
Successfully rebased and updated refs/heads/master.

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (master)
$  git checkout -b hotfix
Switched to a new branch 'hotfix'

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (hotfix)
$ echo "Correciòn ya" >> archivo.txt

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (hotfix)
$ git commit -am "Hotfix"
warning: in the working copy of 'archivo.txt', LF will be replaced by CRLF the next time Git touches it
[hotfix 336c82c] Hotfix
 1 file changed, 1 insertion(+)

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (hotfix)
$ git checkout master
Switched to branch 'master'

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (master)
$ git cherry-pick hotfix
[master 704bafb] Hotfix
 Date: Sun Oct 6 19:10:11 2024 -0500
 1 file changed, 1 insertion(+)

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (master)
$ git merge feature
Already up to date.

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (master)
$ git checkout feature
Switched to branch 'feature'

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (feature)
$ echo "Nuevo Proceso Añadido en feature" > corrupcion.txt

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (feature)
$ git commit -am "Nuevo Proceso Añadido en feature"
On branch feature
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        corrupcion.txt

nothing added to commit but untracked files present (use "git add" to track)

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (feature)
$ git add corrupcion.txt
warning: in the working copy of 'corrupcion.txt', LF will be replaced by CRLF the next time Git touches it

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (feature)
$ git add feature
fatal: pathspec 'feature' did not match any files

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (feature)
$ git commit -am "Nuevo Proceso Añadido en feature"
[feature 697c5e9] Nuevo Proceso Añadido en feature
 1 file changed, 1 insertion(+)
 create mode 100644 corrupcion.txt

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (feature)
$ git checkout master
Switched to branch 'master'

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (master)
$ echo "Nuevo Proceso Añadido en master" > corrupcion.txt

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (master)
$ git commit -am "Nuevo Proceso Añadido en master"
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        corrupcion.txt

nothing added to commit but untracked files present (use "git add" to track)

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (master)
$ git commit -am "Nuevo Proceso Añadido en master"
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        corrupcion.txt

nothing added to commit but untracked files present (use "git add" to track)

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (master)
$ git commit -am "Nuevo Proceso Añadido en master"
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        corrupcion.txt

nothing added to commit but untracked files present (use "git add" to track)

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (master)
$ git commit -am "Nuevo Proceso Añadido en master"
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        corrupcion.txt

nothing added to commit but untracked files present (use "git add" to track)

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (master)
$ git add master
fatal: pathspec 'master' did not match any files

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (master)
$ git commit -am "Nuevo Proceso Añadido en master"
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        corrupcion.txt

nothing added to commit but untracked files present (use "git add" to track)

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (master)
$ git add corrupcion.txt
warning: in the working copy of 'corrupcion.txt', LF will be replaced by CRLF the next time Git touches it

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (master)
$ git commit -am "Nuevo Proceso Añadido en master"
[master 9fbbb47] Nuevo Proceso Añadido en master
 1 file changed, 1 insertion(+)
 create mode 100644 corrupcion.txt

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (master)
$ git merge feature
Auto-merging corrupcion.txt
CONFLICT (add/add): Merge conflict in corrupcion.txt
Automatic merge failed; fix conflicts and then commit the result.

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (master|MERGING)
$ git add feature
fatal: pathspec 'feature' did not match any files

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (master|MERGING)
$ git add corrupcion.txt

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (master|MERGING)
$ git commit -am "Cambio a feature en master"
[master a5acae6] Cambio a feature en master

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (master)
$ git log --oneline --graph --all
*   a5acae6 (HEAD -> master) Cambio a feature en master
|\
| * 697c5e9 (feature) Nuevo Proceso Añadido en feature
* | 9fbbb47 Nuevo Proceso Añadido en master
* | 704bafb Hotfix
|/
| * 336c82c (hotfix) Hotfix
|/
* 59ac689 Tercer commit en feature
* dd95eff Segundo commit en feature
* becbaa3 Commit inicial

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (master)
$ cat corrupcion.txt
<<<<<<< HEAD
Nuevo Proceso Añadido en master
=======
Nuevo Proceso Añadido en feature
>>>>>>> feature

casa@DESKTOP-H37H4UJ MINGW64 ~/Taller-Git (master)
